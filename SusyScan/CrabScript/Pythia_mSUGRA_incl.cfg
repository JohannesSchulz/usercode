process T = 
{
    # this example configuration offers some minimum 
    # annotation, to help users get through; please
    # don't hesitate to read through the comments
    
    
    # use MessageLogger to redirect/suppress multiple
    # service messages coming from the system
    #
    # in this config below, we use the replace option to make
    # the logger let out messages of severity ERROR (INFO level
    # will be suppressed), and we want to limit the number to 10
    #
    #include "FWCore/MessageService/data/MessageLogger.cfi"
    #replace MessageLogger.cout.threshold = "ERROR"
    #replace MessageLogger.cerr.default.limit = 10
   
    # in you wish to quiet the logger even more and leave in 
    # only info from the Framework, use config example below :
    #
    # MessageLogger control
    #
    service = MessageLogger
    {
	untracked vstring destinations = {"cout"}
	untracked vstring categories = { "FwkJob", "SimG4CoreApplication" }
	untracked PSet cout = 
	{ 
	    untracked PSet default = { untracked int32 limit = 0 }    # kill all messages in the log
	    untracked PSet SimG4CoreApplication = { untracked int32 limit = -1 }
	    untracked PSet FwkJob  = { untracked int32 limit = -1 }  # except *all* of FwkJob's
	}
	#untracked vstring fwkJobReports = {"FrameworkJobReport.xml"}
    }

    service = RandomNumberGeneratorService
    {
	untracked uint32 sourceSeed = 1234567
	PSet moduleSeeds =
	{
	    untracked uint32 VtxSmeared   = 7654321
	    untracked uint32 g4SimHits    = 1122334
	    untracked uint32 mix          = 2233445
	    untracked uint32 siPixelDigis = 3344556
	    untracked uint32 siStripDigis = 4455667
	    untracked uint32 ecalUnsuppressedDigis = 5566778
	    untracked uint32 hcalDigis    = 6677889
	    untracked uint32 muonCSCDigis = 7788990
	    untracked uint32 muonDTDigis  = 8899001
	    untracked uint32 muonRPCDigis = 9900112
	}
    }

    # physics event generation
    #
    
    untracked PSet maxEvents = {untracked int32 input = 1}
    source = PythiaSource 
    {
	# to printout pythia event record (call pylist)
	untracked int32 pythiaPylistVerbosity = 1
	# to printout HepMC::GenEvent record (HepMC::GenEvent::print())
	untracked bool pythiaHepMCVerbosity = true
	untracked int32 maxEventsToPrint = 1

	PSet PythiaParameters = {
	    
	    # This is a vector of ParameterSet names to be read, in this order
	    # The first one sets some defaults
	    # The second one are the user specific parameters
	    
	    vstring parameterSets = {
		"pythiaCMSDefaults",
		"myParameters"
	    }
	    
	    vstring pythiaCMSDefaults = {
		'PMAS(5,1)=4.8   ! b quark mass',
		'PMAS(6,1)=170.9 ! t quark mass',
		'MSTJ(11)=3      ! Choice of the fragmentation function',
		'MSTJ(22)=2      ! Decay those unstable particles',
		'PARJ(71)=10.    ! for which ctau  10 mm',
		'MSTP(2)=1       ! which order running alphaS',
		'MSTP(33)=0      ! no K factors in hard cross sections',
		'MSTP(51)=7      ! structure function chosen',
		'MSTP(81)=1      ! multiple parton interactions 1 is Pythia default',
		'MSTP(82)=4      ! Defines the multi-parton model',
		'MSTU(21)=1      ! Check on possible errors during program execution',
		'PARP(82)=1.9    ! pt cutoff for multiparton interactions',
		'PARP(89)=1000.  ! sqrts for which PARP82 is set',
		'PARP(83)=0.5    ! Multiple interactions: matter distrbn parameter',
		'PARP(84)=0.4    ! Multiple interactions: matter distribution parameter',
		'PARP(90)=0.16   ! Multiple interactions: rescaling power',
		'PARP(67)=1.     ! amount of initial-state radiation',
		'PARP(85)=0.33   ! gluon prod. mechanism in MI',
		'PARP(86)=0.66   ! gluon prod. mechanism in MI',
		'PARP(87)=0.7    ! ',
		'PARP(88)=0.5    ! ',
		'PARP(91)=1.0    ! kt distribution'
	    }
	    
	    # User cards - name is "myParameters"
	    
	    vstring myParameters = {
		'MSEL=39         ! inclusive SUSY',
		'MSTP(51)=7      ! CTEQ 5L in pythia 6.2',
		'IMSS(1)=2       ! mSUGRA',
		'RMSS(4)=1.      ! SIGN(MU)',
		'RMSS(5)=50.     ! TAN(BETA)',
		'RMSS(16)=0.     ! A0',
		'RMSS(1)=100.    ! M12',
		'RMSS(8)=150.    ! M0'
	    }
	}
    }
    
    # this config frament brings you 3 steps of the detector simulation:
    # -- vertex smearing (IR modeling)
    # -- G4-based hit level detector simulation
    # -- digitization (electronics readout modeling)
    # it returns 2 sequences : 
    # -- psim (vtx smearing + G4 sim)
    # -- pdigi (digitization in all subsystems, i.e. tracker=pix+sistrips,
    #           cal=ecal+ecal-0-suppression+hcal), muon=csc+dt+rpc)
    #
    
    # Vertex smearing
    #
    # There're 3 types of Vertex smearing module (Gauss, Flat, BeamProfile);
    # the cff's are available for each one :
    # Currently, we suggest using Gaussian vertex smearing
    # Configuration/StandardSequences/data/VtxSmearedGauss.cff
    # Configuration/StandardSequences/data/VtxSmearedNoSmear.cff
    # Configuration/StandardSequences/data/VtxSmearedFlat.cff
    # Configuration/StandardSequences/data/VtxSmearedBeamPreofile.cff
    
    include "Configuration/StandardSequences/data/VtxSmearedGauss.cff" 
    #include "Configuration/StandardSequences/data/VtxSmearedNoSmear.cff" 
    #include "Configuration/StandardSequences/data/VtxSmearedFlat.cff" 
    #include "Configuration/StandardSequences/data/VtxSmearedBeamProfile.cff" 
    

    include "Configuration/StandardSequences/data/Simulation.cff"

    # please note the IMPORTANT: 
    # in order to operate Digis, one needs to include Mixing module 
    # (pileup modeling), at least in the 0-pileup mode
    #
    # There're 3 possible configurations of the Mixing module :
    # no-pileup, low luminosity pileup, and high luminosity pileup
    #
    # they come, respectively, through the 3 config fragments below
    #
    # *each* config returns label "mix"; thus you canNOT have them
    # all together in the same configuration, but only one !!!
    #
    
    include "Configuration/StandardSequences/data/MixingNoPileUp.cff" 
    #include "Configuration/StandardSequences/data/MixingLowLumiPileUp.cff" 
    #include "Configuration/StandardSequences/data/MixingHighLumiPileUp.cff" 

    #
    # You can set Mag Field to 0
    #
    #include "Configuration/StandardSequences/data/UseZeroBField.cff"
    
    include "Configuration/EventContent/data/EventContent.cff"
    
    include "Configuration/StandardSequences/data/Reconstruction.cff"
    include "Configuration/StandardSequences/data/FakeConditions.cff"

    include "SimGeneral/HepPDTESSource/data/pythiapdt.cfi"
    include "PhysicsTools/HepMCCandAlgos/data/genParticleCandidatesFast.cfi"

    # output is configured to drop Ecal unsuppressed digis
    #
    # if you don't want to keep in the CrossingFrame (product of the Mixing),
    # you can add to the outputCommands this: "drop CrossingFrame_*_*_*"
    #
    module GEN-SIM-DIGI-RECO = PoolOutputModule
    {
	using AODSIMEventContent
        untracked string fileName = "Pythia_mSUGRA_incl.root"
	untracked PSet dataset = {
	    untracked string dataTier = "GEN-SIM-DIGI-RECO"
	}
    }
    
    # now the order of execution
    #   
    path p1 = {psim} # simulation
    path p2 = {pdigi} # digitization
    path p3 = {reconstruction} # reconstruction
    path p4 = {genParticleCandidates}
    endpath outpath = { GEN-SIM-DIGI-RECO }

    schedule = {p1,p2,p3,p4,outpath}

}

