process PAT = {


  ### General ###

  # initialize MessageLogger
  include "FWCore/MessageLogger/data/MessageLogger.cfi"
  replace MessageLogger.cerr.threshold = "INFO"

  # return filter & timing reports
  untracked PSet options = { untracked bool wantSummary = true }

  #
  # TFileService
  #
  service = TFileService { 
      string fileName = "HSusyAnalyzer.root"
  }

  ### Input ###

  untracked PSet maxEvents = { untracked int32 input = 1 }

  #source = PoolSource { untracked vstring fileNames = { 'file:chowder-csa07-aodsim.root' } }
  source = PoolSource { untracked vstring fileNames = { } }
  #include "PhysicsTools/PatAlgos/test/RelValTTbar.168.cff"
  include "PhysicsTools/PatAlgos/test/SusyMsugra400_400.cff"

  ### PAT steering ###

  include "PhysicsTools/PatAlgos/data/PATLayer0.cff"
  include "PhysicsTools/PatAlgos/test/PATLayer0_ReplaceDefaults_full.cff"
  include "PhysicsTools/PatAlgos/data/PATLayer1.cff"
  include "PhysicsTools/PatAlgos/test/PATLayer1_ReplaceDefaults_full.cff"

   ### Analyze PAT stuff:
  include "Demo/PATJetIDAnalyzer/data/patjetidanalyzer.cfi"
  replace patjetidanalyzer.SimulateNoise = true
  replace patjetidanalyzer.NoiseMean	  = 0.0
  replace patjetidanalyzer.NoiseSigma	  = 2.0
  replace patjetidanalyzer.NoiseThreshold = 1.0
  replace patjetidanalyzer.Normalize      = false

  path p = {
    patPFTauTagging,                      # enable this on CSA07 AODSIMs (including the 1_5_2 ones)
    #pfRecoTauDiscriminationByIsolation,  # enable this instead on 1_6_10 RelVals
    patLayer0,
    patLayer1,
    patjetidanalyzer
  }


  ### Output ###

  # define the event content
  block patEventContent = {
    untracked vstring outputCommands = {
      "drop *",
      "keep *_iterativeCone5CaloJets_*_*",
#      "keep *_towerMaker_*_*"
      "keep *_caloTowers_*_*"
#      "keep *"
    }
  }
  include "PhysicsTools/PatAlgos/test/PATLayer1_EventContent.cff"
  replace patEventContent.outputCommands += patLayer1EventContent.outputCommands

  # only accept events passing the complete path
  block patEventSelection = {
    untracked PSet SelectEvents = {
      vstring SelectEvents = { "p" }
    }
  }

  # the actual output module
  module out = PoolOutputModule {
    untracked string fileName = "PATLayer1_Output.fromAOD_full.root"
    using patEventSelection
    using patEventContent
    untracked bool verbose = false
  }

  ##endpath outpath = { out }


}


